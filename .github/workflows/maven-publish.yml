name: Microservice Application Workflow

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  ci-build:
    name: CI Build
    runs-on: ubuntu-latest
    env:
      IMAGE_TAG: "latest"
      
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'adopt'

      - name: Compile Code
        run: mvn clean package
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          aws-access-key-id: ${{vars.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{vars.AWS_SECRET_ACCESS_KEY}}
    
      - name: Amazon ECR "Login" Action for GitHub Actions
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registries: 590183892288
          
      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push Docker images
        uses: docker/build-push-action@v6.12.0
        with:
          context: src/
          file: Dockerfile
          push: true
          tags: ${{env.IMAGE_TAG}}


      # - name: Build and Push Docker Image
      #   env:
      #     ECR_REPOSITORY: micro-service-application
      #     IMAGE_TAG: ${{ github.sha }}
      #   run: |
      #     docker build -t $ECR_REPOSITORY:$IMAGE_TAG .
      #     docker tag $ECR_REPOSITORY:$IMAGE_TAG ${{vars.AWS_ACCESS_KEY_ID}}.dkr.ecr.${{vars.AWS_REGION}}.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG
      #     docker push ${{vars.AWS_ACCESS_KEY_ID}}.dkr.ecr.${{vars.AWS_REGION}}.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG

  # CD Deployment Pipeline
  cd-deploy:
    name: CD Deployment
    needs: ci-build
    runs-on: ubuntu-latest
    environment: 
      name: production  # This references the production environment created above
    steps:
      - name: Pull Docker Image from Amazon ECR
        run: |
          aws ecr get-login-password --region ${{vars.AWS_REGION}} | docker login --username AWS --password-stdin ${{vars.AWS_ACCESS_KEY_ID}}.dkr.ecr.${{vars.AWS_REGION}}.amazonaws.com
          docker pull ${{vars.AWS_ACCESS_KEY_ID}}.dkr.ecr.${{vars.AWS_REGION}}.amazonaws.com/myshuttle-repo:${{ github.sha }}

      - name: Deploy to Amazon EKS
        env:
          KUBECONFIG: ${{ secrets.KUBECONFIG }}
        run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml
